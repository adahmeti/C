#include <stdio.h>
#include <time.h>
#include <ctype.h>
#include <stdlib.h>

#define FALSE 0
#define TRUE 1

void printGreeting();
int getBet();
char getSuit(int suit);
char getRank(int rank);
void getFirstHand(int cardRank[], int cardSuit[]);
void getFirstHand(int cardRank[], int cardSuit[], int finalRank[],
int finalSuit[], int ranksinHand[], int suitsinHand[],
int analyzeHand(int ranksinHand[], int suitsinHand[]);

int main()
{

	int bet;
	int bank=100;
	int i;
	int cardRank[5];
	int cardSuit[5];

	int finalRank[5];
	int finalSuit[5];
	int ranksinHand[13];
	int suitsinHand[4];
	int winnings;
	time_t t;
	char suit, rank, stillPlay;

	printGreeting();
	do{
		bet=getBet();
		srand(time(&t));
		getFirstHand(cardRank, cardSuit);
		printf("Your five cards: \n");
		for(i=0;i<5;i++){
			suit=getSuit(cardSuit[i]);
			rank=gatRank(cardRank[i]);
			printf("Card #%d: %c%c\n", i+1, rank, suit);

		}
		for (i=0; i<4;i++){
			suitsinHand[i]=0;
		}
		for(i=0; i<13;i++){

			ranksinHand[i]=0;

		}
	getFinalHand(cardRank, cardSuit, finalRank, finalSuit,ranksinHand,suitsinHand);

	printf("Your five final cards: \n");
	for(i=0; i<5; i++){
		suit=getSuit(finalSuit[i]);
		rank=getRank(finalRank[i]);
		printf("Card #%d: %c%c\n",i+1, rank, suit);

	}
	winnings = analyzeHand(rankinHand, suitsinHand);
	printf("You won %d!\n", bet*winnings );
	printf("\nYour bank is now %d.\n", bank);
	printf("\nDo you want to play again? \n");
	scanf(" %c", &stillPlay);
	}
	while (toupper(stillPlay)=='Y');
	return;
}
/*********************************************************************************/

void printGreeting(){
	printf("*************************************************************\n");
	printf("\n\n\tWelcome to the Absolute Beginner's Casino\n\n");
	printf("1 to 5 credits.\n");
	printf("You are dealt 5 cards and you then choose which cards to keep or discard.\n");
	printf("You want to make the best possible hand.\n");
	printf("\nHere is the table for winnings (assuming a bet of 1 credit):");
	printf("\nPair\t\t\t\t1credit\n");
	printf("\nTwo Pairs\t\t\t2 credits\n");
	printf("\nThree of a kind\t\t\t3 credits\n");
	printf("\nStraight\t\t\t4 credits\n");
	printf("\nFlush\t\t\t\t5 credits\n");
	printf("\nFull House\t\t\t8 credits\n");
	printf("\nFour of a Kind\t\t\t10 credits\n");
	printf("\nStright FLush\t\t\t20 credits\n");
	printf("\n\nHave fun!!\n");
	}

void getFirstHand(int cardRank[], int cardSuit[]){
		int i,j;
		int cardDup;
		for (i=0;i<5,i++){
			cardDup=0;
			do{
				cardRank[i]=(rand()%13);
				cardSuit[i]=(rand()%4);
				for(j=0;j<i;j++){
					if ((cardRank[i]==cardRank[j])&&(cardSuit[i]==cardSuit[j])){
						cardDup=1;
					}

				}

			}while (cardDup==1);


		}


	}
char getSuit(int suit){
	switch(suit){
		case 0:
		return('c');
		case 1:
		return ('d');
		case 2:
		return ('h');
		case 3:
		return('s');
	}
}
char getRank(int rank){
	switch (rank){
		case 0:
		return ('A');
		case 1:
		return ('2');
 		case 2:
 		return('3');
 		case 3:
 		return('4');
 		case 4:
 		return('5');
 		case 5:
 		return('6');
 		case 6:
 		return('7');
 		case 7:
 		return('8');
 		case 8:
 		return('9');
 		case 9:
 		return('T');
 		case 10:
 		return('J');
 		case 11:
 		return('Q');
 		case 12:
 		return ('K');
 	}
}
int getBet(){
	int bet;
	do{
		printf("How much do you want to bet? (Enter a number\n");
		printf("1 to 5, or 0 to quit the game):\n");
		scanf(" %d", &bet);
		if (bet>=1 && bet<=5){
			return(bet);
		}
		else if(bet==0){
			exit (1);
		}
		else{
			printf("\n\nPlease eneter a bet from 1-5 or 0 to quit the game.\n");
		}	

	}
		while ((bet<0)||(bet>5));
}
int analyzeHand(int ranksinHand[], int suitsinHand[]){
		int num_consec=0;
		int i, rank,suit;
		int straight=FALSE;
		int flush=FALSE;
		int four=FALSE;
		int three=FALSE;
		int pairs=0;	

		for(suit=0;suit<4;suit++)
			if(suitsinHand[suit]==5)
				flush=TRUE;
			rank=0;
			while (ranksinHand[rank]==0)
				rank ++;
			for(; rank<13 && ranksinHand[rank];rank++)
				num_consec++;
			if (num_consec==5){
				straight=TRUE;
			}
			for(rank=0;rank<13;rank++){
				if(ranksinHand[rank]==4)
					four=TRUE;
				if(ranksinHand[rank]==3)
					three=TRUE;
				if(ranksinHand[rank]==2)
					pairs++;
			}
			if(straight&&flush){
				printf("Straight flush\n\n");
				return(20);
			}
			else if(four){
				printf("Flush\n\n");
				return(10);
			}
			else if(three&&pairs==1){
				printf("Full HOuse\n\n");
				return(8);
			}
			else if(flush){
				printf("Flush\n\n");
				return(5);
			}
			else if(straight){
				printf("Straight\n\n");
				return(4);
			}
			else if(three){
				printf("Three of a kind\n\n");
				return(3);
			}
			else if(pairs==2){
				printf("Two Pair\n\n");
				return (2);
			}
			else{
				printf("High Card\n\n")
				return(0);
			}
	}
	void getFirstHand(int cardRank[], int cardSuit[], int finalRank[],int finalSuit[]
		, int ranksinHand[], int suirsinHand[]){
		int i, j, cardDup;
		cjar siot,rank,ans;
		for(i=0; i<5;i++){
			suit=getSuit(cardSuit[i]);
			rank=getRank(cardRank[i]);
			printf("Do you want to keep card #%d: %c%c?", i+1, rank, suit );
			printf("\nPlease answer[Y/N]: ");
			scanf(" %c", &ans);
			if(toupper(ans)=='Y'){
				finalRank[i]=cardRank[i];
				finalSuit[i]=cardSuit[i];
				ranksinHand[finalRank[i]]++;
				suirsinHand[finalSuit[i]]++;
				continue;
			}
			else if( toupper(ans)=='N'){
				cardDup=0;
				do{
					cardDup=0;
					finalRank[i]=(rand()%13);
					finalSuit[i]=(rand()%4);
					for (j=0;j<5;j++){
						if ((finalRank[i]==cardRank[j])&&(finalSuit[i]
							==cardSuit[i]==cardSuit[j])){
					cardDup=1;
					}
				}
				for (j=0;j<i;j++){
					if ((finalRank[i]==finalRank[j])&&(finalSuit[i]==finalSuit[j])){
						cardDup=1;
					}
				}
				}
			while(cardDup==1);
			ranksinHand[finalRank[i]]++;
			suitsinHand[finalSuit[i]]++;
	
			
			}	
			
		}
	}

